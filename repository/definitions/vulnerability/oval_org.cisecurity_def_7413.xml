<definition xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" class="vulnerability" id="oval:org.cisecurity:def:7413" version="4">
  <metadata>
    <title>Multiple vulnerabilities in Mozilla Firefox before 74.0</title>
    <affected family="windows">
      <platform>Microsoft Windows 7</platform>
      <platform>Microsoft Windows 8</platform>
      <platform>Microsoft Windows 8.1</platform>
      <platform>Microsoft Windows 10</platform>
      <platform>Microsoft Windows Server 2008</platform>
      <platform>Microsoft Windows Server 2008 R2</platform>
      <platform>Microsoft Windows Server 2012</platform>
      <platform>Microsoft Windows Server 2012 R2</platform>
      <platform>Microsoft Windows Server 2016</platform>
      <platform>Microsoft Windows Server 2019</platform>
      <product>Mozilla Firefox</product>
    </affected>
    <reference ref_id="CVE-2020-6808" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6808" source="CVE" />
    <reference ref_id="CVE-2020-6809" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6809" source="CVE" />
    <reference ref_id="CVE-2020-6810" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6810" source="CVE" />
    <reference ref_id="CVE-2020-6813" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6813" source="CVE" />
    <reference ref_id="CVE-2020-6815" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6815" source="CVE" />
    <description> When a JavaScript URL (javascript:) is evaluated and the result is a string, this string is parsed to create an HTML document, which is then presented. Previously, this document's URL (as reported by the document.location property, for example) was the originating javascript: URL which could lead to spoofing attacks; it is now correctly the URL of the originating document. (CVE-2020-6808) When a Web Extension had the all-urls permission and made a fetch request with a mode set to 'same-origin', it was possible for the Web Extension to read local files. (CVE-2020-6809) After a website had entered fullscreen mode, it could have used a previously opened popup to obscure the notification that indicates the browser is in fullscreen mode. Combined with spoofing the browser chrome, this could have led to confusing the user about the current origin of the page and credential theft or other attacks. (CVE-2020-6810) When protecting CSS blocks with the nonce feature of Content Security Policy, the @import statement in the CSS block could allow an attacker to inject arbitrary styles, bypassing the intent of the Content Security Policy. (CVE-2020-6813) Mozilla developers reported memory safety and script safety bugs present in Firefox 73. Some of these bugs showed evidence of memory corruption or escalation of privilege and we presume that with enough effort some of these could have been exploited to run arbitrary code. (CVE-2020-6815) </description>
    <oval_repository>
      <dates>
        <submitted date="2020-04-06T08:46:00+00:00">
          <contributor organization="GFI">Glenn Lugod</contributor>
        </submitted>
        <status_change date="2020-04-10T04:02:57.121-04:00">DRAFT</status_change>
        <status_change date="2020-04-24T12:00:00.000-04:00">INTERIM</status_change>
      </dates>
      <status>INTERIM</status>
      <min_schema_version>5.10</min_schema_version>
    </oval_repository>
  </metadata>
  <criteria comment="Mozilla Firefox Mainline release is installed + version" operator="AND">
    <extend_definition comment="Mozilla Firefox Mainline release is installed" definition_ref="oval:org.mitre.oval:def:22259" />
    <criterion comment="Check if Mozilla Firefox Mainline version less than 74.0" test_ref="oval:org.cisecurity:tst:15027" />
  </criteria>
</definition>
