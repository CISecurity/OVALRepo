<definition xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" class="vulnerability" id="oval:org.cisecurity:def:7434" version="1">
  <metadata>
    <title>Multiple vulnerabilities in Mozilla Firefox before 60</title>
    <affected family="windows">
      <platform>Microsoft Windows 7</platform>
      <platform>Microsoft Windows 8</platform>
      <platform>Microsoft Windows 8.1</platform>
      <platform>Microsoft Windows 10</platform>
      <platform>Microsoft Windows Server 2008</platform>
      <platform>Microsoft Windows Server 2008 R2</platform>
      <platform>Microsoft Windows Server 2012</platform>
      <platform>Microsoft Windows Server 2012 R2</platform>
      <platform>Microsoft Windows Server 2016</platform>
      <platform>Microsoft Windows Server 2019</platform>
      <product>Mozilla Firefox</product>
    </affected>
    <reference ref_id="CVE-2018-5151" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5151" source="CVE" />
    <reference ref_id="CVE-2018-5152" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5152" source="CVE" />
    <reference ref_id="CVE-2018-5153" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5153" source="CVE" />
    <reference ref_id="CVE-2018-5160" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5160" source="CVE" />
    <reference ref_id="CVE-2018-5163" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5163" source="CVE" />
    <reference ref_id="CVE-2018-5164" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5164" source="CVE" />
    <reference ref_id="CVE-2018-5165" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5165" source="CVE" />
    <reference ref_id="CVE-2018-5166" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5166" source="CVE" />
    <reference ref_id="CVE-2018-5167" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5167" source="CVE" />
    <reference ref_id="CVE-2018-5169" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5169" source="CVE" />
    <reference ref_id="CVE-2018-5172" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5172" source="CVE" />
    <reference ref_id="CVE-2018-5173" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5173" source="CVE" />
    <reference ref_id="CVE-2018-5175" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5175" source="CVE" />
    <reference ref_id="CVE-2018-5176" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5176" source="CVE" />
    <reference ref_id="CVE-2018-5177" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5177" source="CVE" />
    <reference ref_id="CVE-2018-5180" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5180" source="CVE" />
    <reference ref_id="CVE-2018-5181" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5181" source="CVE" />
    <reference ref_id="CVE-2018-5182" ref_url="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5182" source="CVE" />
    <description>
      Memory safety bugs were reported in Firefox 59. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. (CVE-2018-5151)
      WebExtensions with the appropriate permissions can attach content scripts to Mozilla sites such as accounts.firefox.com and listen to network traffic to the site through the "webRequest" API. For example, this allows for the interception of username and an encrypted password during login to Firefox Accounts. This issue does not expose synchronization traffic directly and is limited to the process of user login to the website and the data displayed to the user once logged in. (CVE-2018-5152)
      If websocket data is sent with mixed text and binary in a single message, the binary data can be corrupted. This can result in an out-of-bounds read with the read memory sent to the originating server in response. (CVE-2018-5153)
      WebRTC can use a "WrappedI420Buffer" pixel buffer but the owning image object can be freed while it is still in use. This can result in the WebRTC encoder using uninitialized memory, leading to a potentially exploitable crash. (CVE-2018-5160)
      If a malicious attacker has used another vulnerability to gain full control over a content process, they may be able to replace the alternate data resources stored in the JavaScript Start-up Bytecode Cache (JSBC) for other JavaScript code. If the parent process then runs this replaced code, the executed script would be run with the parent process' privileges, escaping the sandbox on content processes. (CVE-2018-5163)
      Content Security Policy (CSP) is not applied correctly to all parts of multipart content sent with the "multipart/x-mixed-replace" MIME type. This could allow for script to run where CSP should block it, allowing for cross-site scripting (XSS) and other attacks. (CVE-2018-5164)
      In 32-bit versions of Firefox, the Adobe Flash plugin setting for "Enable Adobe Flash protected mode" is unchecked by default even though the Adobe Flash sandbox is actually enabled. The displayed state is the reverse of the true setting, resulting in user confusion. This could cause users to select this setting intending to activate it and inadvertently turn protections off. (CVE-2018-5165)
      WebExtensions can use request redirection and a "filterReponseData" filter to bypass host permission settings to redirect network traffic and access content from a host for which they do not have explicit user permission. (CVE-2018-5166)
      The web console and JavaScript debugger do not sanitize all output that can be hyperlinked. Both will display "chrome:" links as active, clickable hyperlinks in their output. Web sites should not be able to directly link to internal chrome pages. Additionally, the JavaScript debugger will display "javascript:" links, which users could be tricked into clicking by malicious sites. (CVE-2018-5167)
      If manipulated hyperlinked text with "chrome:" URL contained in it is dragged and dropped on the "home" icon, the home page can be reset to include a normally-unlinkable chrome page as one of the home page tabs. (CVE-2018-5169)
      The Live Bookmarks page and the PDF viewer can run injected script content if a user pastes script from the clipboard into them while viewing RSS feeds or PDF files. This could allow a malicious site to socially engineer a user to copy and paste malicious script content that could then run with the context of either page but does not allow for privilege escalation. (CVE-2018-5172)
      The filename appearing in the "Downloads" panel improperly renders some Unicode characters, allowing for the file name to be spoofed. This can be used to obscure the file extension of potentially executable files from user view in the panel. Note: the dialog to open the file will show the full, correct filename and whether it is executable or not. (CVE-2018-5173)
      A mechanism to bypass Content Security Policy (CSP) protections on sites that have a "script-src" policy of "'strict-dynamic'". If a target website contains an HTML injection flaw an attacker could inject a reference to a copy of the "require.js" library that is part of Firefox's Developer Tools, and then use a known technique using that library to bypass the CSP restrictions on executing injected scripts. (CVE-2018-5175)
      The JSON Viewer displays clickable hyperlinks for strings that are parseable as URLs, including "javascript:" links. If a JSON file contains malicious JavaScript script embedded as "javascript:" links, users may be tricked into clicking and running this code in the context of the JSON Viewer. This can allow for the theft of cookies and authorization tokens which are accessible to that context. (CVE-2018-5176)
      A vulnerability exists in XSLT during number formatting where a negative buffer size may be allocated in some instances, leading to a buffer overflow and crash if it occurs. (CVE-2018-5177)
      A use-after-free vulnerability can occur during WebGL operations. While this results in a potentially exploitable crash, the vulnerability is limited because the memory is freed and reused in a brief window of time during the freeing of the same callstack. (CVE-2018-5180)
      If a URL using the "file:" protocol is dragged and dropped onto an open tab that is running in a different child process the tab will open a local file corresponding to the dropped URL, contrary to policy. One way to make the target tab open more reliably in a separate process is to open it with the "noopener" keyword. (CVE-2018-5181)
      If a text string that happens to be a filename in the operating system's native format is dragged and dropped onto the addressbar the specified local file will be opened. This is contrary to policy and is what would happen if the string were the equivalent "file:" URL. (CVE-2018-5182)
    </description>
    <oval_repository>
      <dates>
        <submitted date="2020-04-13T05:36:00+00:00">
          <contributor organization="GFI">Glenn Lugod</contributor>
        </submitted>
      </dates>
      <status>INITIAL SUBMISSION</status>
      <min_schema_version>5.10</min_schema_version>
    </oval_repository>
  </metadata>
  <criteria comment="Mozilla Firefox Mainline release is installed + version" operator="AND">
    <extend_definition comment="Mozilla Firefox Mainline release is installed" definition_ref="oval:org.mitre.oval:def:22259" />
    <criterion comment="Check if Mozilla Firefox Mainline version less than 60.0" test_ref="oval:org.cisecurity:tst:15055" />
  </criteria>
</definition>
